"use strict";var _lodash=require("lodash");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;class Obfuscator{constructor(a){this.methods=a.methods}obfuscate(a,b){this.obfuscateHeaders(a),this.obfuscateRequest(a),this.obfuscateResponse(a,b)}obfuscateHeaders(a){"request"===a.type&&(0,_lodash.has)(a,"headers.authorization")&&(a.headers.authorization=a.headers.authorization.replace(/(Basic )(.*)/,`$1******`))}obfuscateRequest(a){"request"===a.type&&(0,_lodash.isString)(a.body)&&(a.body=JSON.parse(a.body),a.body=(0,_lodash.isArray)(a.body)?(0,_lodash.map)(a.body,this.obfuscateRequestBody):this.obfuscateRequestBody(a.body),a.body=JSON.stringify(a.body))}obfuscateResponse(a,b){if("response"===a.type&&(0,_lodash.get)(a,"response.body")){if("application/octet-stream"===(0,_lodash.get)(a,`response.headers['content-type']`))return void(a.response.body="******");if(b.body){const c=JSON.parse(b.body);if((0,_lodash.isArray)(a.response.body)){const b=(0,_lodash.mapKeys)(c,a=>a.id);return void(a.response.body=(0,_lodash.map)(a.response.body,a=>this.obfuscateResponseBody(a,b[a.id].method)))}a.response.body=this.obfuscateResponseBody(a.response.body,c.method)}}}obfuscateResponseBody(a,b){const c=(0,_lodash.get)(this.methods[b],"obfuscate.response");return!c||(0,_lodash.isEmpty)(a.result)?a:(0,_lodash.defaults)({result:c(a.result)},a)}obfuscateRequestBody(a){const b=(0,_lodash.get)(this.methods[a.method],"obfuscate.request");return b?(0,_lodash.isPlainObject)(a.params)?(0,_lodash.assign)(a,{params:b.named(a.params)}):(0,_lodash.assign)(a,{params:b.default(a.params)}):a}}exports.default=Obfuscator;