"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jsonBigint=_interopRequireDefault(require("json-bigint")),_rpcError=_interopRequireDefault(require("./errors/rpc-error")),_lodash=_interopRequireDefault(require("lodash"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const{parse}=(0,_jsonBigint.default)({storeAsString:!0,strict:!0});class Parser{constructor({driver:a,headers:b}={}){this.driver=a,this.headers=b}rpc(a,[b,c]){if("string"==typeof c&&"application/json"!==b.headers["content-type"]&&200!==b.statusCode)throw new _rpcError.default(b.statusCode,b.statusMessage,{body:c});if(c=parse(c),!Array.isArray(c))return this.getRpcResult(a,c,{headers:this.headers,response:b});const d=c.map(c=>{try{return this.getRpcResult(a,c,{headers:!1,response:b})}catch(a){return a}});return this.headers?[d,b.headers]:d}getRpcResult(a,b,{headers:d=!1,response:c}={}){if(b.error)throw new _rpcError.default(_lodash.default.get(b,"error.code",-32603),_lodash.default.get(b,"error.message","An error occurred while processing the RPC call"));if(!_lodash.default.has(b,"result"))throw new _rpcError.default(-32700,"Missing `result` on the RPC call result");let e;_lodash.default.forEach(this.driver.methods,(b,c)=>{const d=this.driver.formatter.request(c).method;d===a.method&&(e=c)});const f=this.driver.methods[e].formatter||{};return f.output=f.output||function(a){return a},b.result=f.output(b.result),d?[b.result,c.headers]:b.result}}exports.default=Parser;